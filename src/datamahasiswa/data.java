/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package datamahasiswa;
import java.sql.Connection; // digunakan untuk mengimpor class Connection dari package java.sql
import java.sql.DriverManager;// digunakan untuk mengimpor class DriverManager dari package java.sql
import java.sql.ResultSet;// digunakan untuk mengimpor class ResultSet dari package java.sql
import java.sql.SQLException;// digunakan untuk mengimpor class SQLException dari package java.sql
import java.sql.Statement;// digunakan untuk mengimpor class Statement dari package java.sql
import java.util.logging.Level;// digunakan untuk mengimpor class Level dari package java.util.logging
import java.util.logging.Logger;// digunakan untuk mengimpor class Logger dari package java.util.logging
import javax.swing.JFrame;// digunakan untuk mengimpor class JFrame dari package java.swing
import javax.swing.JOptionPane;// digunakan untuk mengimpor class JOptionPane dari package java.swing
import javax.swing.RowFilter;// digunakan untuk mengimpor class RowFilter dari package java.swing
import javax.swing.table.DefaultTableModel;// digunakan untuk mengimpor class DefaultTableModel dari package java.swing.table
import javax.swing.table.TableRowSorter;// digunakan untuk mengimpor class TableRowSorter dari package java.swing.table
/**
 *
 * @author YOU
 */
public class data extends javax.swing.JFrame {

        Connection connection; // untuk mendeklarasikan objek dari class Connection
    /**
     * Creates new form data
     */
    public data() //Untuk mendeklarasikan constructor dari class data
    { 
        initComponents();
        setLocationRelativeTo(null);//untuk mengkonfigurasi lokasi objek 
        connection = koneksi.connection();//untuk memanggil fungsi connection yang berada dalam class koneksi
        load_table(); // untuk memanggil fungsi load_table()
    }
     private void load_table(){ //untuk mendeklarasikan fungsi bernama load_table()
        DefaultTableModel model = new DefaultTableModel(); //untuk membuat objek bernama model dari DefaultTableModel()
        model.addColumn("NIM");//untuk menambahkan kolom "NIM" pada objek tabel model
        model.addColumn("Nama");//untuk menambahkan kolom "Nama" pada objek tabel model
        model.addColumn("Jenis Kelamin");//untuk menambahkan kolom "Jenis Kelamin" pada objek tabel model
        model.addColumn("Alamat");//untuk menambahkan kolom "Alamat" pada objek tabel model
        model.addColumn("Program Studi");//untuk menambahkan kolom "Program Studi" pada objek tabel model
        model.addColumn("Fakultas");//untuk menambahkan kolom "Fakultas" pada objek tabel model
        model.addColumn("Angkatan");//untuk menambahkan kolom "Angkatan" pada objek tabel model
        model.addColumn("Status");//untuk menambahkan kolom "Status" pada objek tabel model
        
        try
        {
            int no=1;
            String sql = "SELECT nim, nama, jenis_kelamin, alamat, prodi, fakultas, angkatan, status FROM mahasiswa";
            // untuk membuat kueri sql yang bertujuan untuk mengambil data dari tabel mahasiswa
            Statement st = connection.createStatement();//untuk mendeklarasikan objek statement yg bernama st 
            ResultSet rs = st.executeQuery(sql);// untuk mendeklarasikan objek bernama rs yang akan menjalankan kueri sql yang telah dibuat
            while(rs.next()){
                model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
                //untuk menampilkan data dari database yang sesuai dengan kueri yang dijalankan lalu dimasukkan kedalam baris-baris di tabel model
            }
            tabel.setModel(model);//untuk mengatur supaya objek tabel menerapkan konfigurasi dari objek model
            tabel.setAutoCreateRowSorter(true);//untuk mengatur supaya nilai dari function setAutoCreateRowSorter pada objek tabel bernilai true
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage());//untuk menampilkan pesan berupa eror yang terjadi
        }
        

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        Judul_Aplikasi = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nim = new javax.swing.JTextField();
        nama = new javax.swing.JTextField();
        rb1 = new javax.swing.JRadioButton();
        rb2 = new javax.swing.JRadioButton();
        alamat = new javax.swing.JTextField();
        prodi = new javax.swing.JTextField();
        fakultas = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        angkatan = new javax.swing.JTextField();
        btn_add = new javax.swing.JButton();
        btn_reset = new javax.swing.JButton();
        txt_cari = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btn_update = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        rb3 = new javax.swing.JRadioButton();
        rb4 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Team Slytherin");
        setResizable(false);

        Judul_Aplikasi.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Judul_Aplikasi.setText("APLIKASI CRUD DATA MAHASISWA");

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "NIM", "Nama", "Jenis Kelamin", "Alamat", "Program Studi", "Fakultas", "Status", "Angkatan"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel);
        if (tabel.getColumnModel().getColumnCount() > 0) {
            tabel.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel2.setText("NIM");

        jLabel3.setText("Nama");

        jLabel4.setText("Program Studi");

        jLabel5.setText("Fakultas");

        jLabel6.setText("Status");

        jLabel7.setText("Alamat");

        nama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaActionPerformed(evt);
            }
        });

        buttonGroup1.add(rb1);
        rb1.setText("Laki - Laki");

        buttonGroup1.add(rb2);
        rb2.setText("Perempuan");

        jLabel8.setText("Angkatan");

        btn_add.setText("Add ");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        btn_reset.setText("Reset");
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });

        txt_cari.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_cariMouseClicked(evt);
            }
        });
        txt_cari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_cariKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_cariKeyReleased(evt);
            }
        });

        jLabel9.setText("Cari Data :");

        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        jLabel10.setText("Jenis Kelamin");

        buttonGroup2.add(rb3);
        rb3.setText("Aktif");

        buttonGroup2.add(rb4);
        rb4.setText("Cuti");
        rb4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(20, 20, 20)
                                .addComponent(txt_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 831, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(alamat, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(nim, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(nama, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGap(1, 1, 1))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(rb1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(rb2)
                                            .addGap(30, 30, 30)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(93, 93, 93)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(prodi, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                                            .addComponent(fakultas, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(28, 28, 28)
                                                .addComponent(rb3)
                                                .addGap(18, 18, 18)
                                                .addComponent(rb4))
                                            .addComponent(angkatan)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(94, 94, 94)
                                        .addComponent(jLabel8))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(jLabel3)
                                .addGap(189, 189, 189)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jLabel10)
                                .addGap(172, 172, 172)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(jLabel2)
                                .addGap(182, 182, 182)
                                .addComponent(jLabel4))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(Judul_Aplikasi))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(btn_update)
                        .addGap(27, 27, 27)
                        .addComponent(btn_delete)
                        .addGap(27, 27, 27)
                        .addComponent(btn_reset)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(Judul_Aplikasi, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prodi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fakultas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rb3)
                        .addComponent(rb4))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rb1)
                        .addComponent(rb2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alamat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(angkatan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_update)
                        .addComponent(btn_reset))
                    .addComponent(btn_add))
                .addGap(55, 55, 55))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rb4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rb4ActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        // TODO add your handling code here:
        // untuk mendeklarasikan kode yang dijalankan apabila btn_delete di klik
        JFrame hapus = new JFrame("Hapus");//untuk mendeklarasikan objek JFrame yang bernama hapus

        if(JOptionPane.showConfirmDialog(hapus, "Data ini akan dihapus, Anda yakin ?",
            "Konfirmasi Hapus Data", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION)
            //untuk menampilkan dialog pop-up untuk mengkonfirmasi saat akan menghapus data
        {
        try {
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/data_mahasiswa","root",""); // menghubungkan ke databses "data_mahasiswa"
            cn.createStatement().executeUpdate("delete from mahasiswa where nim = '"+nim.getText()+"'"); // perintah sql untuk menghapus data pada tabel "mahasiswa"
                                                                                                        //berdasarkan paramater data nim
            load_table();  //untuk memanggil fungsi load_table()                                                                             
            JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus !!");//untuk menampilkan dialog pop-up dengan isi tulisan " Data Berhasil Dihapus !!"
            reset();//untuk memanggil fungsi reset()
        } catch (SQLException ex) {
            Logger.getLogger(data.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        // TODO add your handling code here:
        // untuk mendeklarasikan kode yang dijalankan apabila btn_update di klik        
        
        String jenis_kelamin = null; //mendeklarasikan nilai dari variabel jenis_kelamin menjadi null
        if (rb1.isSelected()) {// apabila objek rb1 yang dipilih maka 
            jenis_kelamin = "Laki - Laki";// nilai dari variabel jenis_kelamin="Laki - Laki"
        }
        else if (rb2.isSelected()) {// apabila objek rb2 yang dipilih maka 
            jenis_kelamin = "Perempuan";// nilai dari variabel jenis_kelamin="Perempuan"
        }
        String status = null;//mendeklarasikan nilai dari variabel status menjadi null
        if (rb3.isSelected()) {// apabila objek rb3 yang dipilih maka 
            status = "aktif";// nilai dari variabel status="aktif"
        }
        else if (rb4.isSelected()) {// apabila objek rb4 yang dipilih maka 
            status = "cuti";// nilai dari variabel status="cuti"
        }
        try {
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/data_mahasiswa","root",""); // menghubungkan ke databses "data_mahasiswa"
            cn.createStatement().executeUpdate("update mahasiswa set nama ='" + nama.getText() // perintah sql untuk mengupdate data pada tabel "mahasiswa"
                + "',jenis_kelamin ='" + jenis_kelamin 
                + "',alamat ='" + alamat.getText()
                + "',prodi ='" + prodi.getText()
                + "',fakultas ='" + fakultas.getText()
                + "',angkatan ='" + angkatan.getText()
                + "',status ='" + status
                + "' where nim = '"+nim.getText()+"'");
            if(nim.getText().equals("")) //cek apakah field nim kosong
             {
                JOptionPane.showMessageDialog(null,"NIM Tidak Boleh Kosong"); //apabila kosong maka muncul popup dengan tulisan NIM tidak boleh kosong
             }
            else if(nama.getText().equals("")) //cek apakah field nama kosong
             {
                JOptionPane.showMessageDialog(null,"Nama Tidak Boleh Kosong"); //apabila kosong maka muncul popup dengan tulisan Nama tidak boleh kosong
             }
            else if(alamat.getText().equals("")) //cek apakah field alamat kosong
            {
                JOptionPane.showMessageDialog(null,"Alamat Tidak Boleh Kosong"); //apabila kosong maka muncul popup dengan tulisan Alamat tidak boleh kosong
            }
            else if(prodi.getText().equals("")) //cek apakah field prodi kosong
            {
                JOptionPane.showMessageDialog(null,"Prodi Tidak Boleh Kosong"); //apabila kosong maka muncul popup dengan tulisan Prodi tidak boleh kosong
            }
            else if(fakultas.getText().equals("")) //cek apakah field fakultas kosong
            {
                JOptionPane.showMessageDialog(null,"Fakultas Tidak Boleh Kosong"); //apabila kosong maka muncul popup dengan tulisan Fakultas tidak boleh kosong
            }
            else if(angkatan.getText().equals("")) //cek apakah field angkatan kosong
            {
                JOptionPane.showMessageDialog(null,"Angkatan Tidak Boleh Kosong"); //apabila kosong maka muncul popup dengan tulisan Angkatan tidak boleh kosong
            }
            else
            {
                load_table();// untuk memanggil fungsii load_table()
                JOptionPane.showMessageDialog(null, "Data Berhasil Diperbarui !!");//menampilkan popup dengan tulisan Data Berhasil Diperbarui
                reset();// untuk memanggil fungsi reset()
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(data.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btn_updateActionPerformed

    private void txt_cariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cariKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txt_cariKeyReleased

    private void txt_cariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cariKeyPressed
        // TODO add your handling code here:
        //untuk mendeklarasikan kode yang dijalankan apabila field txt_cari diketik isinya
        DefaultTableModel model = (DefaultTableModel)tabel.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);//untuk mendeklarasikan objek tr dari objek TableRowSorter<DefaultTableModel>
        tabel.setRowSorter(tr);//untuk memanggil fungsi setRowSorter pada objek tabel dengan parameter tr
        tr.setRowFilter(RowFilter.regexFilter(txt_cari.getText().trim()));//menghapus spasi pada saat proses filter
        tr.setRowFilter(RowFilter.regexFilter("(?i)" + txt_cari.getText()));//mengatasi case sensitive
        //set agar filter dapat membaca huruf besar maupun kecil. Cth : PBOL = pbol = Pbol = pBoL
    }//GEN-LAST:event_txt_cariKeyPressed

    private void txt_cariMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_cariMouseClicked
        // TODO add your handling code here:
        //untuk mendeklarasikan kode yang dijalankan apabila field txt_cari diklik
        txt_cari.setText("");//untuk mengkosongkan isi dari field txt_cari saat diklik
    }//GEN-LAST:event_txt_cariMouseClicked

    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
        // TODO add your handling code here:
               //untuk mendeklarasikan kode yang dijalankan apabila tombol btn_reset diklik

        reset();//untuk memanggil fungsi reset()
    }//GEN-LAST:event_btn_resetActionPerformed

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        // TODO add your handling code here:
        String jenis_kelamin = null;//mendeklarasikan nilai dari variabel jenis_kelamin menjadi null
        if (rb1.isSelected()) {// apabila objek rb1 yang dipilih maka 
            jenis_kelamin = "Laki - Laki";// nilai dari variabel jenis_kelamin="Laki - Laki"
        }
        else if (rb2.isSelected()) {// apabila objek rb2 yang dipilih maka 
            jenis_kelamin = "Perempuan";// nilai dari variabel jenis_kelamin="Perempuan"
        }
        String status = null;//mendeklarasikan nilai dari variabel status menjadi null
        if (rb3.isSelected()) {// apabila objek rb3 yang dipilih maka 
            status = "aktif";// nilai dari variabel status="aktif"
        }
        else if (rb4.isSelected()) {// apabila objek rb4 yang dipilih maka 
            status = "cuti";// nilai dari variabel status="cuti"
        }

         
       
        try {
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/data_mahasiswa","root",""); // menghubungkan ke databses "data_mahasiswa"
            cn.createStatement().executeUpdate("insert into mahasiswa values"+"('" + nim.getText() // perintah sql untuk menambahkan data baru pada tabel "mahasiswa"
                + "','" + nama.getText()
                + "','" + jenis_kelamin
                + "','" + alamat.getText()
                + "','" + prodi.getText()
                + "','" + fakultas.getText()
                + "','" + angkatan.getText()
                + "','" + status+"')");
            
        } catch (SQLException ex) {
             if(nim.getText().equals("")) //cek apakah field nim kosong
             {
                JOptionPane.showMessageDialog(null,"NIM Tidak Boleh Kosong"); //apabila kosong maka muncul popup dengan tulisan NIM tidak boleh kosong
             }


            else if(nama.getText().equals("")) //cek apakah field nama kosong
             {
                JOptionPane.showMessageDialog(null,"Nama Tidak Boleh Kosong"); //apabila kosong maka muncul popup dengan tulisan Nama tidak boleh kosong
             }
            else if(alamat.getText().equals("")) //cek apakah field alamat kosong
            {
                JOptionPane.showMessageDialog(null,"Alamat Tidak Boleh Kosong"); //apabila kosong maka muncul popup dengan tulisan Alamat tidak boleh kosong
            }
            else if(prodi.getText().equals("")) //cek apakah field prodi kosong
            {
                JOptionPane.showMessageDialog(null,"Prodi Tidak Boleh Kosong"); //apabila kosong maka muncul popup dengan tulisan Prodi tidak boleh kosong
            }
            else if(fakultas.getText().equals("")) //cek apakah field fakultas kosong
            {
                JOptionPane.showMessageDialog(null,"Fakultas Tidak Boleh Kosong"); //apabila kosong maka muncul popup dengan tulisan Fakultas tidak boleh kosong
            }
            else if(angkatan.getText().equals("")) //cek apakah field angkatan kosong
            {
                JOptionPane.showMessageDialog(null,"Angkatan Tidak Boleh Kosong"); //apabila kosong maka muncul popup dengan tulisan Angkatan tidak boleh kosong
            }

            else
            {
                load_table();//memanggil fungsi load_table()
                JOptionPane.showMessageDialog(null, "Data Berhasil Ditambahkan !! "); //menampilkan popup dengan tulisan Data Berhasil Ditambahkan apabila data berhasil di insert
                reset();//memanggil fungsi reset()
            }
        }
    }//GEN-LAST:event_btn_addActionPerformed

    private void namaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaActionPerformed

    private void tabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelMouseClicked
        // TODO add your handling code here:
        //untuk mendeklarasikan kode yang dijalankan apabila tabel diklik
        int i = tabel.getSelectedRow(); //untuk mendeklarasikan variabel i 

        if(i > -1) { 
            nim.setText(tabel.getValueAt(i, 0).toString()); //untuk menampilkan data nim dari objek tabel pada field nim
            nim.setEditable(false);//untuk mengatur supaya field nim tidak dapat diedit
            nama.setText(tabel.getValueAt(i, 1).toString());//untuk menampilkan data nama dari objek tabel pada field nama
            if ("Laki - Laki".equals(tabel.getValueAt(i, 2).toString())) {
                rb1.setSelected(true);//untuk membuat opsi rb1 menjadi terpilih apabila data dari objek tabel bernilai "Laki-laki"
            }
            else {
                rb2.setSelected(true);//untuk membuat opsi rb2 menjadi terpilih apabila data dari objek tabel bernilai selain dari "Laki-laki"
            }
            alamat.setText(tabel.getValueAt(i, 3).toString());//untuk menampilkan data alamat dari objek tabel pada field alamat
            prodi.setText(tabel.getValueAt(i, 4).toString());//untuk menampilkan data prodi dari objek tabel pada field prodi
            fakultas.setText(tabel.getValueAt(i, 5).toString());//untuk menampilkan data fakultas dari objek tabel pada field fakultas
            if ("aktif".equals(tabel.getValueAt(i, 7).toString())) {
                rb3.setSelected(true);//untuk membuat opsi rb1 menjadi terpilih apabila data dari objek tabel bernilai "aktif"
            }
            else {
                rb4.setSelected(true);//untuk membuat opsi rb1 menjadi terpilih apabila data dari objek tabel bernilai selain dari  "cuti"
            }
            angkatan.setText(tabel.getValueAt(i, 6).toString());//untuk menampilkan data angkatan dari objek tabel pada field angkatan

        }

      
    }//GEN-LAST:event_tabelMouseClicked
    
    private void reset() { // mengosongkan semua data dari form nim, nama, jenis kelamin dan alamat
        nim.setText("");//mengosongkan field nim
        nim.setEditable(true);//mengatur supaya field nim dapat diedit
        nama.setText("");//mengosongkan field nama
        alamat.setText("");//mengosongkan field alamat
        angkatan.setText("");//mengosongkan field angkatan
        fakultas.setText("");//mengosongkan field fakultas
        prodi.setText("");//mengosongkan field prodi

        buttonGroup1.clearSelection();//untuk mengosongkan opsi pilihan pada buttonGroup1
        buttonGroup2.clearSelection();//untuk mengosongkan opsi pilihan pada buttonGroup2

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {//fungsi utama/main pada program
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new data().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Judul_Aplikasi;
    private javax.swing.JTextField alamat;
    private javax.swing.JTextField angkatan;
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_reset;
    private javax.swing.JButton btn_update;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTextField fakultas;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nama;
    private javax.swing.JTextField nim;
    private javax.swing.JTextField prodi;
    private javax.swing.JRadioButton rb1;
    private javax.swing.JRadioButton rb2;
    private javax.swing.JRadioButton rb3;
    private javax.swing.JRadioButton rb4;
    private javax.swing.JTable tabel;
    private javax.swing.JTextField txt_cari;
    // End of variables declaration//GEN-END:variables
}
